name: CI - Cypress + Mochawesome + Vercel

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    env:
      CYPRESS_SPEC: "cypress/e2e/**/*.cy.js"
      REPORT_REPO: "https://github.com/AndersonDiaz15/reportes-cypress.git"
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      # 1Ô∏è‚É£ Descargar el repositorio principal
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Instalar Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Instalar dependencias
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ Ejecutar Cypress y generar reporte Mochawesome
      - name: Run Cypress Tests and Generate Report
        run: |
          npx cypress run --browser chrome --spec "${{ env.CYPRESS_SPEC }}" \
            --reporter mochawesome \
            --reporter-options reportDir=mochawesome-report,overwrite=false,html=false,json=true || true

          npx mochawesome-merge mochawesome-report/*.json > mochawesome.json
          npx marge mochawesome.json --reportDir mochawesome-report --inline

          mv mochawesome-report/mochawesome.html mochawesome-report/index.html

      # 5Ô∏è‚É£ Clonar repo de reportes
      - name: Clone report repo
        run: |
          git clone $REPORT_REPO report-repo
          rm -rf report-repo/*                       # Limpiar reportes viejos
          cp -r mochawesome-report/* report-repo/    # Copiar reportes nuevos

      # 6Ô∏è‚É£ Commit y push al repo de reportes
      - name: Commit and Push Report
        run: |
          cd report-repo
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update Cypress report #${{ github.run_number }}" || echo "No changes to commit"
          git push origin main

      # 7Ô∏è‚É£ Enviar correo con link del reporte (opcional)
      - name: Send Vercel Report Link via Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "üìä Reporte Cypress - ${{ github.repository }} #${{ github.run_number }}"
          to: ${{ secrets.EMAIL_TO }}
          from: "CI GitHub Actions <${{ secrets.EMAIL_USER }}>"
          body: |
            Hola,

            REPORTE DE EJECUCI√ìN DE PRUEBAS CYPRESS

            Repositorio: ${{ github.repository }}
            Rama: ${{ github.ref_name }}
            Commit: ${{ github.event.head_commit.message }}
            Autor: ${{ github.event.head_commit.author.name }}
            Estado: ${{ job.status }} 

            El reporte completo est√° disponible en:
            https://reportes-cypress.vercel.app

            ¬°Saludos!

    # Guardar videos si falla Cypress
    # - name: Upload Cypress videos
    #   if: failure()
    #   uses: actions/upload-artifact@v4
    #   with:
    #    name: cypress-videos
    #     path: cypress/videos

    # Guardar screenshots si falla Cypress
    #  - name: Upload Cypress screenshots
    #    if: failure()
    #    uses: actions/upload-artifact@v4
    #    with:
    #      name: cypress-screenshots
    #      path: cypress/screenshots

    # Subir archivos v√≠a FTP solo si Cypress pas√≥
    # - name: Deploy to InfinityFree via FTP
    #   if: success() # corre solo si los tests pasaron
    #   uses: SamKirkland/FTP-Deploy-Action@4.3.0
    #   with:
    #     server: ${{ secrets.FTP_HOST }}
    #     username: ${{ secrets.FTP_USER }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     local-dir: ./ # Carpeta local a subir
    #     server-dir: /htdocs/ # Carpeta remota en InfinityFree
