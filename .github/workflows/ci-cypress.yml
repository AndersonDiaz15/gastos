name: CI - Cypress Flexible

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    env:
      CYPRESS_SPEC: "cypress/e2e/**/*.cy.js"

    steps:
      # 1Ô∏è‚É£ Descargar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Instalar Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Instalar dependencias del proyecto
      - name: Install dependencies
        run: npm ci
      - name: Install Allure plugin
        run: npm install @shelex/cypress-allure-plugin --save-dev

      # 4Ô∏è‚É£ Ejecutar Cypress y generar resultados Allure
      - name: Run Cypress Tests
        run: |
          npx cypress run --browser chrome --spec "${{ env.CYPRESS_SPEC }}"
          npx allure generate allure-results --clean -o allure-report

      # 5Ô∏è‚É£ Publicar en GitHub Pages (repo externo)
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.REPORTES_TOKEN }}
          external_repository: AndersonDiaz15/gastos-reports
          publish_branch: gh-pages
          publish_dir: ./allure-report
          user_name: "GitHub Actions"
          user_email: "actions@github.com"
          commit_message: "üöÄ Publicaci√≥n autom√°tica del reporte Allure"

      # Guardar videos si falla Cypress
      # - name: Upload Cypress videos
      #   if: failure()
      #   uses: actions/upload-artifact@v4
      #   with:
      #    name: cypress-videos
      #     path: cypress/videos

      # Guardar screenshots si falla Cypress
      #  - name: Upload Cypress screenshots
      #    if: failure()
      #    uses: actions/upload-artifact@v4
      #    with:
      #      name: cypress-screenshots
      #      path: cypress/screenshots

      # Subir archivos v√≠a FTP solo si Cypress pas√≥
      # - name: Deploy to InfinityFree via FTP
      #   if: success() # corre solo si los tests pasaron
      #   uses: SamKirkland/FTP-Deploy-Action@4.3.0
      #   with:
      #     server: ${{ secrets.FTP_HOST }}
      #     username: ${{ secrets.FTP_USER }}
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     local-dir: ./ # Carpeta local a subir
      #     server-dir: /htdocs/ # Carpeta remota en InfinityFree
